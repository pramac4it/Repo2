pipeline {
    agent any
 
    environment {
        // Define environment variables
        PROJECT_NAME = 'MyProject'
        BUILD_DIR = 'build'
    }
 
    stages {
        stage('Checkout') {
            steps {
                // Step to checkout code from the repository
                git branch: 'main', url: 'https://github.com/pramac4it/Repo2.git'
            }
        }
 
        stage('Build') {
            steps {
                script {
                    // Check if the Makefile or build script exists before building
                    if (fileExists('Makefile')) {
                        echo "Building ${env.PROJECT_NAME}"
                        sh 'make build'  // Example build command
                    } else {
                        error "Build script not found. Skipping build stage."
                    }
                }
            }
        }
 
        stage('Test') {
            steps {
                script {
                    // Check if the test script exists before running tests
                    if (fileExists('Makefile')) {
                        echo "Running tests for ${env.PROJECT_NAME}"
                        sh 'make test'  // Example test command
                    } else {
                        error "Test script not found. Skipping test stage."
                    }
                }
            }
        }
 
        stage('Deploy') {
            steps {
                script {
                    // Check if the deploy script exists before deploying
                    if (fileExists('Makefile')) {
                        echo "Deploying ${env.PROJECT_NAME}"
                        sh 'make deploy'  // Example deploy command
                    } else {
                        error "Deploy script not found. Skipping deploy stage."
                    }
                }
            }
        }
    }
 
    post {
        always {
            // Steps that run always, regardless of build status
            echo 'Cleaning up...'
            sh "rm -rf ${env.BUILD_DIR}"
        }
        success {
            // Steps that run only if the build was successful
            echo 'Build completed successfully!'
        }
        failure {
            // Steps that run only if the build failed
            echo 'Build failed!'
        }
    }
}
